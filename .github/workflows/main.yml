# This is a basic workflow to help you get started with Actions
name: CLO835-DockerBuild-ECRpush

# Controls when the workflow will run
on:
 # Triggers the workflow on push or pull request events but only for the "development" branch
  push:
    branches: [ "master" ]
    
  # Allows you to run this workflow manually from the Actions tab 
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Runs a set of commands using the runners shell
      - name: AWS ECR Login step
        id: ecrlogin
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: us-east-1   
          
          
      - name: Docker Build and ECR Push
        env:
         ECR_REGISTRY: ${{ steps.ecrlogin.outputs.registry }}
        run: |
          cd clo835_fall2022_assignment1/
          ls -ltra
                    
          # MYSQL Docker Build with mySQL df and Push 
          
          docker build -f Dockerfile_mysql -t $ECR_REGISTRY/amehta63-db:v1.0 .
          docker push $ECR_REGISTRY/amehta63-db:v1.0
          
          # App Docker Build with default df and Push
          
          docker build -f Dockerfile -t $ECR_REGISTRY/amehta63-wapp:v1.0 .
          docker push $ECR_REGISTRY/amehta63-wapp:v1.0
          docker ps -a
